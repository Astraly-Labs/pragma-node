services:
  postgre-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test-password
      - POSTGRES_DB=pragma
      - POSTGRES_LISTEN_ADDRESSES=*
      - PGPORT=5433
    networks:
      - pragma-db-network
    ports:
      - "5433:5433"
    expose:
      - 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  timescale-db:
    image: timescale/timescaledb-ha:pg14-latest
    restart: always
    user: postgres
    secrets:
      - db-password
    networks:
      - pragma-db-network
    volumes:
      - timescale-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pragma
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_LISTEN_ADDRESSES=*
    
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pragma-zookeeper:
    container_name: "pragma-zookeeper"
    image: confluentinc/cp-zookeeper:latest
    restart: "always"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pragma-zookeeper-network
    volumes:
      - pragma_zookeeper_data:/var/lib/zookeeper/data
      - pragma_zookeeper_logs:/var/lib/zookeeper/log
    ports:
      - "2181:2181"

  pragma-kafka:
    container_name: "pragma-kafka"
    image: confluentinc/cp-kafka:latest
    depends_on:
      pragma-zookeeper:
        condition: service_started
    networks:
      - pragma-kafka-network
      - pragma-zookeeper-network
    ports:
      - "29092:29092"
      - "9092:9092"
    expose:
      - "29092"
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--list",
          "--bootstrap-server",
          "pragma-kafka:9092"
        ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: pragma-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://pragma-kafka:9092,PLAINTEXT_E://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_E:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  pragma-ingestor-1:
    container_name: "pragma-ingestor-1"
    environment:
      - POSTGRES_DATABASE_URL=postgres://postgres:test-password@db:5432/pragma
      - DATABASE_MAX_CONN=5
      - BROKERS=pragma-kafka:9092
      - TOPIC=pragma-data
      - GROUP_ID=pragma-data
    depends_on:
      pragma-kafka:
        condition: service_healthy
      timescale-db:
        condition: service_healthy
    networks:
      - pragma-kafka-network
      - pragma-db-network
    build:
      dockerfile: infra/pragma-ingestor/Dockerfile

networks:
  pragma-db-network:
  pragma-kafka-network:
  pragma-zookeeper-network:

volumes:
  timescale-db-data:
  postgre-db-data:
  pragma_zookeeper_data:
  pragma_zookeeper_logs:

secrets:
  db-password:
    file: infra/db/password.txt
